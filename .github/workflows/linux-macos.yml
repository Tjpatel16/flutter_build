name: Build and Release Linux App (.deb and AppImage)

on:
  push:
    tags:
      - 'v*.*.*' # Trigger the workflow only when a tag like v1.0.1 is pushed

env:
  FLUTTER_VERSION: "3.24.5"
  APP_NAME: "flutter_app" # Replace with your app's name

jobs:
  build-linux:
    name: Build Linux App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Dependencies for Packaging
        run: |
          sudo apt update
          sudo apt install -y \
            cmake \
            ninja-build \
            libgtk-3-dev \
            liblzma-dev \
            libpango1.0-dev \
            libatk1.0-0 \
            libgdk-pixbuf2.0-0 \
            libgdk-pixbuf2.0-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxss-dev \
            libappindicator3-dev \
            libgtksourceview-3.0-dev \
            libnss3 \
            libx11-xcb-dev \
            libdbus-1-dev \
            libgstreamer1.0-0 \
            libgstreamer-plugins-base1.0-0 \
            libxcomposite-dev \
            libxdamage-dev \
            libasound2-dev \
            build-essential

      - name: Enable Flutter Desktop
        run: flutter config --enable-linux-desktop

      - name: Flutter clean
        run: flutter clean

      - name: Install Flutter Dependencies
        run: flutter pub get

      - name: Build Linux App
        run: flutter build linux --release

      - name: Build .deb Package
        run: |
          VERSION=${GITHUB_REF_NAME#refs/tags/}
          APP_NAME=${{ env.APP_NAME }}
          mkdir -p deb-package/DEBIAN
          cat <<EOF > deb-package/DEBIAN/control
          Package: $APP_NAME
          Version: $VERSION
          Architecture: amd64
          Maintainer: Tejas Patel
          Description: Build flutter app and change app icon
          EOF
          mkdir -p deb-package/usr/local/bin
          cp -r build/linux/x64/release/bundle/$APP_NAME deb-package/usr/local/bin/
          dpkg-deb --build deb-package
          mv deb-package.deb $APP_NAME-${VERSION}.deb

      - name: Build AppImage
        run: |
          VERSION=${GITHUB_REF_NAME#refs/tags/}
          APP_NAME=${{ env.APP_NAME }}
          mkdir -p appimage/AppDir/usr/bin
          cp -r build/linux/x64/release/bundle/$APP_NAME appimage/AppDir/usr/bin/
          wget -O appimage/AppDir/AppRun https://github.com/AppImage/AppImageKit/releases/download/continuous/AppRun-x86_64
          chmod +x appimage/AppDir/AppRun
          mkdir -p appimage/AppDir/meta/gui
          cp assets/images/logo.png appimage/AppDir/meta/gui/icon.png
          appimagetool -n appimage/AppDir
          mv *.AppImage $APP_NAME-${VERSION}.AppImage

      - name: Upload Build Artifact (.deb)
        uses: actions/upload-artifact@v3
        with:
          name: flutter-app-deb
          path: flutter-app-${GITHUB_REF_NAME}.deb

      - name: Upload Build Artifact (AppImage)
        uses: actions/upload-artifact@v3
        with:
          name: flutter-app-appimage
          path: flutter-app-${GITHUB_REF_NAME}.AppImage

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: |
            This release includes the Linux build of the Flutter app.
            - Tag: ${{ github.ref_name }}
          draft: false
          prerelease: false
          artifacts: |
            flutter-app-${GITHUB_REF_NAME}.deb
            flutter-app-${GITHUB_REF_NAME}.AppImage
          token: ${{ secrets.TOKEN }}