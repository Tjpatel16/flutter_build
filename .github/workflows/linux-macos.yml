name: Build and Release Flutter App for Linux

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v1.1.0, etc.

env:
  FLUTTER_VERSION: "3.24.5"
  APP_NAME: "flutter_app"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build pkg-config libgtk-3-dev dpkg-dev debhelper

    - name: Install Flutter dependencies
      run: |
        flutter pub get

    - name: Build Linux release
      run: |
        flutter build linux --release

    - name: Build .deb package
      run: |
        cd build/linux/x64/release/bundle
        VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
        APP_NAME_SANITIZED=$(echo ${{ env.APP_NAME }} | tr '[:upper:]' '[:lower:]' | tr -d '[:space:]')
        DEB_DIR="${APP_NAME_SANITIZED}_deb"
        mkdir -p $DEB_DIR/DEBIAN
        echo "Package: $APP_NAME_SANITIZED" > $DEB_DIR/DEBIAN/control
        echo "Version: $VERSION" >> $DEB_DIR/DEBIAN/control  # Use modified version
        echo "Architecture: amd64" >> $DEB_DIR/DEBIAN/control
        echo "Maintainer: Your Name <youremail@example.com>" >> $DEB_DIR/DEBIAN/control
        echo "Description: My Flutter App" >> $DEB_DIR/DEBIAN/control
        dpkg-deb --build $DEB_DIR

    - name: Build AppImage
      run: |
        sudo apt-get install -y appimagetool
        appimagetool -n build/linux/x64/release/bundle ${{ env.APP_NAME }}.AppImage

    - name: Upload .deb and AppImage to GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/linux/x64/release/bundle/${{ env.APP_NAME }}.deb
          build/linux/x64/release/bundle/${{ env.APP_NAME }}.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}