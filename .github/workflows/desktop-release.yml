name: Build and Release Flutter App

on:
  push:
    tags:
      - 'v*.*.*'

env:
  FLUTTER_VERSION: "3.24.5"
  APP_NAME: "your-app-name"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Enable dart_distributor
        run: dart pub global activate flutter_distributor
    
    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build pkg-config libgtk-3-dev libblkid-dev liblzma-dev python3-pip
        pip3 install appimage-builder

    - name: Build Linux packages
      run: |
        flutter pub get
        flutter_distributor build --targets linux-deb,linux-appimage --platform linux

    - name: Upload Linux artifacts
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*.deb
          dist/*.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Install Inno Setup
      run: |
        $innosetupUrl = "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe"
        $installerPath = "$env:RUNNER_TEMP\innosetup.exe"
        Invoke-WebRequest -Uri $innosetupUrl -OutFile $installerPath
        Start-Process -FilePath $installerPath -Args "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-" -Wait
      
    - name: Enable dart_distributor
        run: dart pub global activate flutter_distributor
    
    - name: Build Windows executable
      run: |
        flutter pub get
        flutter_distributor build --targets exe --platform windows

    - name: Upload Windows artifacts
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*.exe
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Install create-dmg
      run: brew install create-dmg

    - name: Enable dart_distributor
        run: dart pub global activate flutter_distributor
    
    - name: Add dependency_overrides to pubspec.yaml
      run: |
        echo "dependency_overrides:" >> pubspec.yaml
        echo "  archive: 3.1.6" >> pubspec.yaml
        echo "  image: 3.2.2" >> pubspec.yaml

    - name: Build macOS DMG
      run: |
        flutter pub get
        flutter_distributor build --targets dmg --platform macos

    - name: Upload macOS artifacts
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}