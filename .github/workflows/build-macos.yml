name: Build and Release macOS Flutter App

on:
  push:
    tags:
      - 'v*.*.*' # Trigger the workflow only when a tag like v1.0.1 is pushed

env:
  FLUTTER_VERSION: "3.24.5"

jobs:
  build-macos:
    name: Build macOS App
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Flutter Dependencies
        run: flutter pub get

      - name: Enable macOS Support
        run: flutter config --enable-macos-desktop

      - name: Install CocoaPods Dependencies
        run: |
          cd macos
          pod install

      - name: Ensure Missing xcfilelist Files
        run: |
          mkdir -p macos/Flutter/ephemeral
          touch macos/Flutter/ephemeral/FlutterInputs.xcfilelist
          touch macos/Flutter/ephemeral/FlutterOutputs.xcfilelist

      - name: Disable Code Signing in Xcode
        run: |
          PROJECT_FILE=$(find macos -name "Runner.xcodeproj" | head -n 1)
          if [ -z "$PROJECT_FILE" ]; then
            echo "Error: Runner.xcodeproj file not found"
            exit 1
          fi

          echo "Disabling code signing for the macOS project..."
          xcodebuild -project "$PROJECT_FILE" \
            -target Runner \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_ENTITLEMENTS="" \
            DEVELOPMENT_TEAM=""

      - name: Build macOS App Without Code Signing
        run: flutter build macos --release

      - name: Debug Build Directory
        run: |
          echo "Contents of build/macos/Build/Products/Release:"
          ls -la build/macos/Build/Products/Release

      - name: Prepare DMG Configuration
        id: prepare-dmg
        run: |
          APP_PATH=$(find build/macos/Build/Products/Release -name "*.app" -type d | head -n 1)
          if [ -z "$APP_PATH" ]; then
            echo "Error: .app file not found in build/macos/Build/Products/Release"
            exit 1
          fi

          echo "Found .app file at $APP_PATH"
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV

          mkdir -p dmg-config
          cat <<EOF > dmg-config/dmg-config.json
          {
            "title": "Flutter App",
            "icon": "assets/images/logo.png",
            "contents": [
              {
                "x": 448,
                "y": 344,
                "type": "link",
                "path": "/Applications"
              },
              {
                "x": 192,
                "y": 344,
                "type": "file",
                "path": "$APP_PATH"
              }
            ],
            "icon-size": 128,
            "window": {
              "size": {
                "width": 640,
                "height": 480
              }
            }
          }
          EOF

      - name: Install create-dmg
        run: npm install --global create-dmg

      - name: Package DMG File
        run: |
          APP_PATH=$APP_PATH
          if [ ! -d "$APP_PATH" ]; then
            echo "Error: .app file not found at $APP_PATH"
            exit 1
          fi

          create-dmg --config dmg-config/dmg-config.json --overwrite "$APP_PATH"

          mv "Flutter App*.dmg" "flutter-build-macos-${{ github.ref_name }}.dmg"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-dmg
          path: "flutter-build-macos-${{ github.ref_name }}.dmg"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "flutter-build-macos-${{ github.ref_name }}.dmg"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: |
            This release includes the macOS build of the Flutter app.
            - Tag: ${{ github.ref_name }}
          draft: false
          prerelease: false